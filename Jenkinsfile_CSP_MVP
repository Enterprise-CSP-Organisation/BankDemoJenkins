node {

    stage('Env Variables') {
	 bat 'set'
    }
    
    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */
        cleanWs()
	git branch: "main",
        url: 'https://github.com/MicroFocus/BankDemo.git'
    }

    stage('Build') {

    }

    stage('Release') {
	//Create System Release folder structure
	powershell '''
	New-Item -Path build -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system\\catalog -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system\\catalog\\data -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system\\loadlib -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system\\logs -ItemType directory
	New-Item -Path build\\Release-$env:BUILD_TAG\\system\\rdef -ItemType directory
	Copy-Item -Path "executables\\Windows\\x64\\core\\*" -Destination "build\\Release-$env:BUILD_TAG\\system\\loadlib"
	Compress-Archive -Path "build\\Release-$env:BUILD_TAG\\system" -DestinationPath "build\\Release-$env:BUILD_TAG.zip"
	'''
	archiveArtifacts artifacts: 'build/*.zip', fingerprint: true
    }
   
	//curl -X POST "http://192.168.159.128:30086/native/v1/regions/172.17.0.5/30090/logon" -H "Origin:http://localhost:30086" -H "Host:localhost:30086" -H "accept: application/json" -H "X-Requested-With: X-Requested-With" -H "Content-Type: application/json" -d "{\"CN\":\"region\",\"mfUser\":\"sysad\",\"mfPassword\":\"sysad\",\"mfUseSession\":\"true\"}"
   
    stage('Deploy') {
        //def response = httpRequest "http://127.0.0.1:10086/native/v1/regions/127.0.0.1/86/logon"

	httpRequest customHeaders: [[Origin: 'http://localhost:10086', Host: 'localhost:10086', X-Requested-With: 'X-Requested-With']],
	    httpMode: 'POST', quiet: true,
            requestBody: '''{
	    "CN":"region",
	    "mfUser":"sysad",
	    "mfPassword":"sysad",
	    "mfUseSession":"true"
            }''',
            url: 'http://127.0.0.1:10086/native/v1/regions/127.0.0.1/86/logo'
	
        println("Status: ${response.status}")
        println("Response: ${response.content}")
        println("Headers: ${response.headers}")
    }
    
    stage('Test') {  
 
    }
}
